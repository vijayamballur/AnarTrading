/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package vijay.org.visa;

import org.vijay.employee.*;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.vijay.common.connection;
import org.vijay.report.ReportView;
import org.vijay.common.CurrentWorkingDirectory;

/**
 *
 * @author MAC
 */
public class PassportCopy extends javax.swing.JInternalFrame {

    /**
     * Creates new form PassportDocument
     */
    public PassportCopy() {
        initComponents();
        setSize(Toolkit.getDefaultToolkit().getScreenSize());
    }
    public PassportCopy(int businessVisaId) {
        this.businessVisaId=businessVisaId;
        initComponents();
        setSize(Toolkit.getDefaultToolkit().getScreenSize());
        setLocation(middle);
        viewDocuments();
        if(lblPassport.getIcon()==null)
        {
            btnSave.setEnabled(true);
            btnUpdate.setEnabled(false);
        }
        else
        {
            btnSave.setVisible(false);
            btnUpdate.setEnabled(false);
        }
        
    }
    public static BufferedImage resize(BufferedImage image, int width, int height) 
    {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
    public void viewDocuments()
    {
        connection c=new connection();
        Connection con=c.conn();
        try
        {

            PreparedStatement ps=con.prepareStatement("select passport from tbl_business_visa_passport where businessVisaId=?");
            ps.setInt(1, businessVisaId);
            ResultSet rs=ps.executeQuery();
            while(rs.next())
            {
                passportByte=rs.getBytes(1);
                ByteArrayInputStream bisPassport = new ByteArrayInputStream(passportByte);
                try 
                { 
                    bfImage=ImageIO.read(bisPassport);
                    resizedImage=resize(bfImage,800,555);
                    imageIcon=new ImageIcon(resizedImage);
                    lblPassport.setIcon(imageIcon);
                    
                } 
                catch(IOException e)
                {
                    
                }
             }
            
        }
        catch(Exception e)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPassport = new javax.swing.JLabel();
        lblEmployeeName = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnBrowse = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();

        setClosable(true);
        setTitle("Passport Copy");

        lblPassport.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblEmployeeName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnBrowse.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBrowse.setText("Browse");
        btnBrowse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBrowse);

        btnSave.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);

        btnUpdate.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jToolBar1.add(btnUpdate);

        btnPrint.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPrint);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(lblEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        fc.showOpenDialog(this);
        filePassport=fc.getSelectedFile();
        pathPassport=filePassport.getAbsolutePath();
        try
        {
            finPassport=new FileInputStream(filePassport);
            lenPassport=(int)filePassport.length();
            bfImage=ImageIO.read(filePassport);
            resizedImage=resize(bfImage,800,555);
            imageIcon=new ImageIcon(resizedImage);
            lblPassport.setIcon(imageIcon);
            if(imageIcon==null)
            {
                btnUpdate.setEnabled(false);
            }
            else
            {
                btnUpdate.setEnabled(true);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,e);
        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(lblPassport.getIcon()==null)
        {
            JOptionPane.showMessageDialog(rootPane,"Please Browse the passport then press 'Save' button");
            
        }
        else
        {
            try
            {
                connection c=new connection();
                Connection con=c.conn();
                PreparedStatement ps=con.prepareStatement("insert into tbl_business_visa_passport(businessVisaId,passport) values(?,?)");
                ps.setInt(1,businessVisaId);
                ps.setBinaryStream(2,finPassport,lenPassport);
                int status=ps.executeUpdate();
                if(status>0)
                {
                    dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Error");
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,e);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(lblPassport.getIcon()==null)
        {
            JOptionPane.showMessageDialog(rootPane,"Please Browse the new passport then press 'Update' button");
            
        }
        else
        {
            try
            {
                connection c=new connection();
                Connection con=c.conn();
                PreparedStatement ps=con.prepareStatement("update tbl_business_visa_passport set passport=? where businessVisaId=?");
                ps.setBinaryStream(1,finPassport,lenPassport);
                ps.setInt(2,businessVisaId);
                int i=ps.executeUpdate();
                if(i!=0)
                {
                    dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Error");
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,e);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        CurrentWorkingDirectory CWD=new CurrentWorkingDirectory();
        String path=CWD.getpath();
        HashMap para=new HashMap();
        para.put("businessVisaId",businessVisaId);
        ReportView re=new ReportView(path.concat("\\lib\\Reports\\Anar\\BusinessVisa\\passportCopy.jasper"),para);
        re.setVisible(true);
    }//GEN-LAST:event_btnPrintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblEmployeeName;
    private javax.swing.JLabel lblPassport;
    // End of variables declaration//GEN-END:variables
    byte[] passportByte;
    BufferedImage bfImage,resizedImage;
    ImageIcon imageIcon;
    int businessVisaId,lenPassport;
    String pathPassport;
    File filePassport;
    FileInputStream finPassport;
    JFileChooser fc=new JFileChooser(new File("Desktop"));
    Point middle = new Point(0,0);
}
